version: '2.4'
services:

  yugabytedb:
    image: yugabytedb/yugabyte:latest
    container_name: yugabytedb
    command:
      - "/home/yugabyte/bin/yugabyted"
      - "start"
      - "--daemon=false"
      - "--ui=false"
      - "--tserver_flags=pgsql_proxy_bind_address=0.0.0.0:5433"
    ports:
      - "7000:7000"  # yb-master UI
      - "5433:5433"  # YSQL
    healthcheck:
      test: [ "CMD", "ysqlsh", "-h", "localhost", "-p", "5433", "-U", "yugabyte", "-c", "SELECT 1;" ]
      interval: 10s
      timeout: 5s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # S3 API
      - "9090:9090"  # Web Console (UI)
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9090"

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      yugabytedb:
        condition: service_healthy
      kafka:
        condition: service_started
      minio:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://yugabytedb:5433/yugabyte
      SPRING_DATASOURCE_USERNAME: yugabyte
      SPRING_DATASOURCE_PASSWORD: yugabyte
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:8080



